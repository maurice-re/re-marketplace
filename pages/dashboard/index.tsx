import { Transaction, User } from "@prisma/client";
import type { GetServerSideProps, NextPage } from "next";
import { unstable_getServerSession } from "next-auth";
import { signIn } from "next-auth/react";
import Head from "next/head";
import { useState } from "react";
import prisma from "../../constants/prisma";
import { authOptions } from "../api/auth/[...nextauth]";

type HomeProps = {
  transaction: Transaction | undefined;
  user: User | undefined;
};

const Home: NextPage<HomeProps> = ({ transaction, user }: HomeProps) => {
  const [email, setEmail] = useState<string>(user?.email ?? "");

  function handleLogin() {
    signIn("email", { redirect: false, email: email });
  }

  const head = (
    <Head>
      <title>Find your perfect setup</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
  );
  if (user && transaction) {
    return (
      <div className="w-full h-screen bg-black flex overflow-hidden">
        {head}
        <main className="flex flex-col container mx-auto py-6 text-white bg-blue-500">
          <h1 className=" font-theinhardt text-3xl">{`Welcome ${user.firstName}!`}</h1>
          <div className="border-2 border-white px-4 py-4 rounded-10">
            <div>{`Last order ${new Date(
              transaction.createdAt
            ).toDateString()}`}</div>
            <div>{`Order status is ${transaction.status}`}</div>
            <div>{`${transaction.numItems} containers ordered`}</div>
            <div>{`Sent to ${transaction.numLocations} locations`}</div>
          </div>
        </main>
      </div>
    );
  }

  return (
    <div className="w-screen h-screen bg-black flex overflow-hidden">
      {head}

      <main className="flex flex-col container mx-auto my-auto items-center py-4 text-white">
        <div>
          <input
            name={"Email"}
            className="p-1 border-2 text-lg w-full bg-stripe-gray border-gray-500 outline-re-green-800 rounded mb-4"
            type="text"
            value={email}
            placeholder={"Email"}
            onChange={(e) => setEmail(e.target.value)}
          />
          <button
            className=" w-full px-2 py-3 border-2 rounded-10 hover:border-re-green-500 text-lg"
            onClick={handleLogin}
          >
            Login
          </button>
        </div>
      </main>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async (context) => {
  const session = await unstable_getServerSession(
    context.req,
    context.res,
    authOptions
  );
  if (session) {
    const user = await prisma.user.findUnique({
      where: {
        email: session?.user?.email ?? "",
      },
      include: {
        transactions: {
          take: 1,
          orderBy: {
            createdAt: "desc",
          },
          include: {
            orders: true,
          },
        },
      },
    });
    return {
      props: {
        user: JSON.parse(JSON.stringify(user)),
        transaction: JSON.parse(JSON.stringify(user?.transactions[0])),
      },
    };
  }
  return { props: {} };
};

export default Home;
