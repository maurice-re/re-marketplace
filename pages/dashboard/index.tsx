import { User } from "@prisma/client";
import type { GetServerSideProps, NextPage } from "next";
import { unstable_getServerSession } from "next-auth";
import { signIn } from "next-auth/react";
import Head from "next/head";
import { useState } from "react";
import prisma from "../../constants/prisma";
import { authOptions } from "../api/auth/[...nextauth]";

type HomeProps = {
  user: User | undefined;
};

const Home: NextPage<HomeProps> = ({ user }: HomeProps) => {
  const [email, setEmail] = useState<string>(user?.email ?? "");

  function handleLogin() {
    signIn("email", { redirect: false, email: email });
  }

  return (
    <div className="w-screen h-screen bg-black flex overflow-hidden">
      <Head>
        <title>Find your perfect setup</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex flex-col container mx-auto my-auto items-center py-4 text-white">
        <h1>{user ? `Welcome ${user?.firstName}!` : "Please log in"}</h1>
        {user == null && (
          <div>
            <input
              name={"Email"}
              className="p-1 border-2 text-lg w-full bg-stripe-gray border-gray-500 outline-re-green-800 rounded mb-4"
              type="text"
              value={email}
              placeholder={"Email"}
              onChange={(e) => setEmail(e.target.value)}
            />
            <button
              className=" w-full px-2 py-3 border-2 rounded-10 hover:border-re-green-500 text-lg"
              onClick={handleLogin}
            >
              Login
            </button>
          </div>
        )}
      </main>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async (context) => {
  const session = await unstable_getServerSession(
    context.req,
    context.res,
    authOptions
  );
  if (session) {
    const user = await prisma.user.findUnique({
      where: {
        email: session?.user?.email ?? "",
      },
    });
    return { props: { user: JSON.parse(JSON.stringify(user)) } };
  }
  return { props: {} };
};

export default Home;
