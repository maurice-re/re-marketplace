import type { NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import FormNextButton from "../../components/form/next-button";
import ProgressBar from "../../components/form/progress-bar";
import { cities } from "../../constants/cities";
import { useAppContext } from "../../context/context-provider";

const LocationPage: NextPage = () => {
  const [query, setQuery] = useState<string>("");
  const [context, setContext] = useAppContext();
  const [drawerOpen, toggleDrawer] = useState<boolean>();
  const [_, forceRender] = useState<number>(0);

  function handleClick(city: string) {
    if (context.locations.includes(city)) {
      context.removeLocation(city);
    } else {
      context.addLocation(city);
    }
    setContext(context);
    setQuery("");
    toggleDrawer(false);
    forceRender((prev) => prev + 1);
  }

  const options = cities
    .filter((city) => city.toLowerCase().startsWith(query.toLowerCase()))
    .map((city) => (
      <div
        key={city}
        className="flex justify-between p-2 hover:bg-gray-200"
        onMouseDown={() => handleClick(city)}
      >
        <div className="text-xl">{city}</div>
        {context.locations.includes(city) ? (
          <div className="text-xl">âœ”</div>
        ) : null}
      </div>
    ));

  const chosen = context.locations.map((city) => (
    <div className="bg-aquamarine-500 text-sm pr-2 py-1 rounded-md mr-1 mb-1 flex">
      <button
        className="pl-1 pr-1 text-red-500"
        onClick={() => handleClick(city)}
      >
        &times;
      </button>
      <div>{city}</div>
    </div>
  ));

  return (
    <div className="container mx-auto mt-8">
      <Head>
        <title>Find your perfect setup</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ProgressBar pageName={"location"} />
      <main className="flex flex-col items-center">
        <div className="">
          <h1 className=" text-6xl font-semibold text-center">
            What cities do you operate in
          </h1>
          <div className=" text-sm italic self-right mb-8 ml-2 pl-7 lg:pl-0">
            Select all that apply
          </div>
        </div>
        <div className="w-3/5 lg:w-96">
          <input
            className=" text-xl p-4 border-2 border-gray-300 rounded-md w-full"
            type="text"
            value={query}
            onFocus={() => toggleDrawer(true)}
            onBlur={() => toggleDrawer(false)}
            onChange={(e) => setQuery(e.target.value)}
            placeholder="Enter city..."
            required
          />
          {!drawerOpen && <div className="flex flex-wrap pt-2">{chosen}</div>}
          {drawerOpen && (
            <div className=" bg-gray-50 border-2 border-t-0 rounded-b-md max-h-64 overflow-auto">
              {options}
            </div>
          )}
        </div>
      </main>
      <FormNextButton
        pageName={"location"}
        disabled={context.locations.length < 1}
        onClick={() => {
          context.addSummary();
          setContext(context);
        }}
      />
    </div>
  );
};

export default LocationPage;
